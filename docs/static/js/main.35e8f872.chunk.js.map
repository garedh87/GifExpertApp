{"version":3,"sources":["componets/AddCategory.js","helpers/getGifs.js","componets/GifGridItem.js","componets/GifGrid.js","hooks/useFetchGigs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","loagings","useFetchGifs","GifExpertApp","props","categories","class","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,UAAU,YAAYC,SAVX,SAACC,GAClBA,EAAEC,iBAECL,EAAWM,OAAOC,OAAO,IACxBT,GAAgB,SAAAU,GAAI,OAAMR,GAAN,mBAAoBQ,OACxCP,EAAc,MAKlB,SACI,uBACIQ,KAAK,OACLC,MAAQV,EACRW,SAlBc,SAACP,GACvBH,EAAcG,EAAEQ,OAAOF,QAkBfG,YAAY,yB,+BCvBfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAY,IAAVb,EAAS,EAATA,IAI1B,OAGY,aAFR,CAEQ,OAAKf,UAAU,8CAA8C6B,IAAMd,EAAKe,IAAM,MCLjFC,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAErB,ECDwB,SAAEA,GAE1B,MAA0BhB,mBAAU,CAChCuB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEPvB,EAAQC,GACHuB,MAAK,SAAAC,GAEFH,EAAS,CACLd,KAAMiB,EACNC,UAAU,SAIxB,CAACzB,IAEIoB,EDnBwBM,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaY,EAApB,EAAoBA,QAEpB,OACI,qCACA,oBAAIhC,UAAU,oCAAd,SAAmDa,IAElDmB,GAAW,mBAAGhC,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,eAAf,SAEQ0B,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,eEqBtBgB,EAnCM,SAACC,GAEnB,MAAoC5C,mBAAS,CAAC,eAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAIC,OACI,sBAAKI,UAAU,0BAAf,UACI,sBAAK2C,MAAM,MAAX,UACI,gDACA,6DAIJ,uBACI,qBAAK3C,UAAU,gCAAf,SACI,cAAC,EAAD,CAAaJ,cAAeA,MAEpC,qBAAKI,UAAU,YAAf,SAEQ0C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCrBjC+B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.35e8f872.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>1 ){\r\n            setCategories ( cats => [ inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className='form-text' onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue}\r\n                onChange={ handleInputChange }\r\n                placeholder=\"Type to search...\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=20&api_key=H2R8QQE8nD80q4yiUZnXzJ6gdhXUK29L`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ url}) => {\r\n\r\n    // console.log({id, title, url});\r\n\r\n    return (\r\n        // <div className='col-sm-2'>\r\n            \r\n                <img className=\" col card animate__animated animate__fadeIn\" src={ url} alt={ \"\" }/>\r\n            \r\n        // </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGigs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n       \r\n        <div className=\"container gif-grid\">\r\n            <div className='row gif-grid'>\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />           \r\n                    ))                \r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs} from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState( {\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loagings: false\r\n                });\r\n            })\r\n\r\n    },[category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './componets/AddCategory';\r\nimport { GifGrid } from './componets/GifGrid';\r\n\r\n\r\nconst GifExpertApp = (props )=> {\r\n\r\n   const [categories, setCategories] = useState(['Search GIF'])\r\n\r\n    \r\n\r\n    return (\r\n        <div className='container mainContainer'>\r\n            <div class='row'>\r\n                <h1>GIF Expert App</h1>\r\n                <h3>Find your favourite GIFs</h3>\r\n               \r\n            </div>\r\n\r\n            <hr />\r\n                <div className='row justify-content-sm-center'>\r\n                    <AddCategory setCategories={setCategories}/>\r\n                </div>\r\n            <div className='container'>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category} \r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}